{"version":3,"sources":["components/Navbar.js","components/ui/theme.js","components/api.js","components/Chart.js","components/StateDisplay.js","App.js","serviceWorker.js","index.js"],"names":["HideOnScroll","props","children","window","trigger","useScrollTrigger","target","undefined","appear","direction","in","useStyles","makeStyles","theme","root","flexGrow","title","tab","fontFamily","fontWeight","fontSize","backHome","padding","backgroundColor","drawerIconContainer","drawer","drawerItem","typography","color","Navbar","classes","useTheme","iOS","process","browser","test","navigator","userAgent","matches","useMediaQuery","breakpoints","down","useState","openDrawer","setOpenDrawer","value","setValue","useEffect","location","pathname","tabs","onChange","e","newValue","indicatorColor","className","component","Link","to","label","disableBackdropTransition","disableDiscovery","open","onClose","onOpen","disablePadding","onClick","divider","button","disableTypography","disableRipple","position","variant","createMuiTheme","palette","common","barelyGreen","brownShirt","tanBlonde","blondey","greySilver","yellowBrite","primary","main","secondary","error","warning","success","info","fetchData","a","axios","get","states","data","Chart","ChartData","setChartData","fetchAPI","lineChart","labels","map","state","datasets","confirmedCases","hoverBorderWidth","borderWidth","borderColor","casesOnAdmission","discharged","death","StateDisplay","setStates","res","fetchStates","display","flexWrap","justifyContent","margin","card","width","height","textAlign","header","marginBottom","marginTop","paddingTop","s","index","key","Paper","elevation","Typography","gutterBottom","start","end","duration","separator","App","ThemeProvider","exact","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.6610fa68.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport { makeStyles, withTheme } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\n// function ElevationScroll(props) {\r\n//   const { children } = props;\r\n\r\n//   const trigger = useScrollTrigger({\r\n//     disableHysteresis: true,\r\n//     threshold: 0,\r\n//   });\r\n\r\n//   return React.cloneElement(children, {\r\n//     elevation: trigger ? 4 : 0,\r\n//   });\r\n// }\r\n\r\nfunction HideOnScroll(props) {\r\n  const { children, window } = props;\r\n\r\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\n// HideOnScroll.propTypes = {\r\n//   children: PropTypes.element.isRequired,\r\n\r\n//   window: PropTypes.func,\r\n// };\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  tab: {\r\n    fontFamily: \"Rambla\",\r\n    fontWeight: 700,\r\n    fontSize: \"1rem\",\r\n  },\r\n  backHome: {\r\n    padding: 0,\r\n    fontFamily: \"Rambla\",\r\n    fontSize: \"1rem\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n  },\r\n  drawerIconContainer: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n  },\r\n  drawer: {\r\n    backgroundColor: \"theme.palette.secondary.main\",\r\n  },\r\n  drawerItem: {\r\n    ...theme.typography.tab,\r\n    color: \"black\",\r\n    fontFamily: \"Rambla\",\r\n  },\r\n}));\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n  const matches = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (e, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (window.location.pathname === \"/\" && value !== 0) {\r\n      setValue(0);\r\n    } else if (window.location.pathname === \"/chart\" && value !== 1) {\r\n      setValue(1);\r\n    }\r\n  }, [value]);\r\n\r\n  const tabs = [\r\n    <>\r\n      <Tabs value={value} onChange={handleChange} indicatorColor=\"secondary\">\r\n        <Tab className={classes.tab} component={Link} to=\"/\" label=\"Home\" />\r\n        <Tab\r\n          className={classes.tab}\r\n          component={Link}\r\n          to=\"/chart\"\r\n          label=\"Chart\"\r\n        />\r\n      </Tabs>\r\n    </>,\r\n  ];\r\n\r\n  const drawer = (\r\n    <>\r\n      <SwipeableDrawer\r\n        disableBackdropTransition={!iOS}\r\n        disableDiscovery={iOS}\r\n        open={openDrawer}\r\n        onClose={() => setOpenDrawer(false)}\r\n        onOpen={() => setOpenDrawer(true)}\r\n        className={classes.drawer}\r\n      >\r\n        <List disablePadding>\r\n          <ListItem\r\n            onClick={() => setOpenDrawer(false)}\r\n            divider\r\n            button\r\n            component={Link}\r\n            to=\"/\"\r\n          >\r\n            <ListItemText className={classes.drawerItem} disableTypography>\r\n              Home\r\n            </ListItemText>\r\n          </ListItem>\r\n          <ListItem\r\n            onClick={() => setOpenDrawer(false)}\r\n            divider\r\n            button\r\n            component={Link}\r\n            to=\"/chart\"\r\n          >\r\n            <ListItemText className={classes.drawerItem} disableTypography>\r\n              Covid Chart\r\n            </ListItemText>\r\n          </ListItem>\r\n        </List>\r\n      </SwipeableDrawer>\r\n      <IconButton\r\n        className={classes.drawerIconContainer}\r\n        onClick={() => setOpenDrawer(!openDrawer)}\r\n        disableRipple\r\n      >\r\n        <MenuIcon />\r\n      </IconButton>\r\n    </>\r\n  );\r\n  return (\r\n    <>\r\n      <HideOnScroll className={classes.root}>\r\n        <AppBar position=\"sticky\">\r\n          <Toolbar>\r\n            <Typography className={classes.title} variant=\"h6\">\r\n              <Button\r\n                className={classes.backHome}\r\n                onClick={() => setValue(0)}\r\n                component={Link}\r\n                to=\"/\"\r\n                disableRipple\r\n              >\r\n                Naija Covid-19 Stats\r\n              </Button>\r\n            </Typography>\r\n            {matches ? drawer : tabs}\r\n            {/* <Link\r\n                to=\"/\"\r\n                style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n              >\r\n                <Button>Home</Button>\r\n              </Link>\r\n              <Link\r\n                to=\"/chart\"\r\n                style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n              >\r\n                <Button>Chart</Button>\r\n              </Link> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </HideOnScroll>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst barelyGreen = \"#acb7ae\";\r\nconst brownShirt = \"#82716e\";\r\nconst tanBlonde = \"#e4decd\";\r\nconst blondey = \"#c2b490\";\r\nconst greySilver = \"#bccbde\";\r\nconst yellowBrite = \"#cdd422\";\r\n\r\nexport default createMuiTheme({\r\n  palette: {\r\n    common: {\r\n      barelyGreen: `${barelyGreen}`,\r\n      brownShirt: `${brownShirt}`,\r\n      tanBlonde: `${tanBlonde}`,\r\n      blondey: `${blondey}`,\r\n      greySilver: `${greySilver}`,\r\n      yellowBrite: `${yellowBrite}`,\r\n    },\r\n    primary: {\r\n      main: barelyGreen,\r\n    },\r\n    secondary: {\r\n      main: tanBlonde,\r\n    },\r\n    error: {\r\n      main: brownShirt,\r\n    },\r\n    warning: {\r\n      main: blondey,\r\n    },\r\n    success: {\r\n      main: greySilver,\r\n    },\r\n    info: {\r\n      main: yellowBrite,\r\n    },\r\n  },\r\n});\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covidnigeria.herokuapp.com/api\";\r\n\r\nexport const fetchData = async () => {\r\n  try {\r\n    const {\r\n      data: {\r\n        data: { states },\r\n      },\r\n    } = await axios.get(url);\r\n    // console.log(result);\r\n    return { states };\r\n  } catch (error) {}\r\n  // setData(result.data.data.states);\r\n  // setData(result.data);\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { fetchData } from \"./api\";\r\n\r\nconst Chart = () => {\r\n  const [ChartData, setChartData] = useState([\"\"]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const { states } = await fetchData();\r\n      setChartData(states);\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = (\r\n    <Bar\r\n      data={{\r\n        labels: ChartData.map(({ state }) => state),\r\n        datasets: [\r\n          {\r\n            data: ChartData.map(({ confirmedCases }) => confirmedCases),\r\n            label: \"Confirmed Cases\",\r\n            backgroundColor: \"purple\",\r\n            hoverBorderWidth: 3,\r\n            borderWidth: 1,\r\n            borderColor: \"black\",\r\n          },\r\n          {\r\n            data: ChartData.map(({ casesOnAdmission }) => casesOnAdmission),\r\n            label: \"Active Cases\",\r\n            backgroundColor: \"green\",\r\n          },\r\n          {\r\n            data: ChartData.map(({ discharged }) => discharged),\r\n            label: \"Discharged Cases\",\r\n            backgroundColor: \"blue\",\r\n          },\r\n          {\r\n            data: ChartData.map(({ death }) => death),\r\n            label: \"Deaths\",\r\n            backgroundColor: \"red\",\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  );\r\n\r\n  return <div>{lineChart}</div>;\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CountUp from \"react-countup\";\r\n\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport { fetchData } from \"./api\";\r\n\r\nconst StateDisplay = () => {\r\n  const [states, setStates] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchStates() {\r\n      const res = await fetchData();\r\n      // console.log(res.states);\r\n      setStates(res.states);\r\n    }\r\n\r\n    //   // const data = async () => {\r\n    //   //   await fetchData();\r\n    //   //   console.log(data);\r\n    //   //   // setData(result.data.data.states);\r\n\r\n    //   //   // setStates(result.data.data.states);\r\n    //   //   // setData(result.data);\r\n    //   // };\r\n\r\n    fetchStates();\r\n  }, []);\r\n\r\n  const theme = useTheme();\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n      justifyContent: \"center\",\r\n\r\n      margin: \"0\",\r\n      padding: \"0\",\r\n    },\r\n    card: {\r\n      width: \"300px\",\r\n      height: \"auto\",\r\n\r\n      textAlign: \"center\",\r\n\r\n      margin: \"0.5rem\",\r\n    },\r\n    header: {\r\n      marginBottom: \"0\",\r\n      marginTop: \"0\",\r\n      color: \"black\",\r\n      paddingTop: \"1rem\",\r\n      textAlign: \"center\",\r\n      fontSize: \"1.5rem\",\r\n      fontFamily: \"Rambla\",\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        fontSize: \"1rem\",\r\n      },\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <h2 className={classes.header}>The Covid-19 figures by States</h2>\r\n      <div className={classes.root}>\r\n        {states.map((s, index) => (\r\n          <div key={index}>\r\n            <Paper elevation={4} className={classes.card}>\r\n              <Typography color=\"textSecondary\" variant=\"h5\" gutterBottom>\r\n                State: {s.state}\r\n              </Typography>\r\n              <Typography color=\"textSecondary\" variant=\"h5\" gutterBottom>\r\n                Confirmed Cases:{\" \"}\r\n                <CountUp\r\n                  start={0}\r\n                  end={s.confirmedCases}\r\n                  duration={2.5}\r\n                  separator=\",\"\r\n                />\r\n              </Typography>\r\n              <Typography color=\"textSecondary\" variant=\"h5\" gutterBottom>\r\n                Active Cases:\r\n                <CountUp\r\n                  start={0}\r\n                  end={s.casesOnAdmission}\r\n                  duration={2.5}\r\n                  separator=\",\"\r\n                />\r\n              </Typography>\r\n              <Typography color=\"textSecondary\" variant=\"h5\" gutterBottom>\r\n                Discharged:\r\n                <CountUp\r\n                  start={0}\r\n                  end={s.discharged}\r\n                  duration={2.5}\r\n                  separator=\",\"\r\n                />\r\n              </Typography>\r\n              <Typography color=\"textSecondary\" variant=\"h5\" gutterBottom>\r\n                Deaths:{\" \"}\r\n                <CountUp start={0} end={s.death} duration={2.5} separator=\",\" />\r\n              </Typography>\r\n            </Paper>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StateDisplay;\r\n","import React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./components/ui/theme\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Chart from \"./components/Chart\";\n\nimport StateDisplay from \"./components/StateDisplay\";\nimport createPalette from \"@material-ui/core/styles/createPalette\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: \"0\",\n    padding: \"0\",\n    height: \"auto\",\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n        <div className={classes.root}>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={StateDisplay} />\n            <Route path=\"/chart\" component={Chart} />\n          </Switch>\n        </div>\n      </ThemeProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import Router from \"./components/Router\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}